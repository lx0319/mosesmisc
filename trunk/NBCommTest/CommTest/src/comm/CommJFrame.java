/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CommJFrame.java
 *
 * Created on 2009-9-1, 16:16:04
 */
package comm;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.comm.CommPortIdentifier;
import javax.comm.NoSuchPortException;
import javax.comm.PortInUseException;
import javax.comm.SerialPort;
import javax.comm.UnsupportedCommOperationException;

/**
 *
 * @author Administrator
 */
public class CommJFrame extends javax.swing.JFrame {

    

    /** Creates new form CommJFrame */
    public CommJFrame() {
        initComponents();
        parameters = new SerialParameters();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel_Parity = new javax.swing.JPanel();
        jLabel_Parity = new javax.swing.JLabel();
        jComboBox_ParityList = new javax.swing.JComboBox();
        jPanel_port = new javax.swing.JPanel();
        jLabel_Portname = new javax.swing.JLabel();
        jComboBox_portList = new javax.swing.JComboBox();
        jPanel_DataBits = new javax.swing.JPanel();
        jLabel_DataBits = new javax.swing.JLabel();
        jComboBox_DataBitsList = new javax.swing.JComboBox();
        jPanel_BaudRate = new javax.swing.JPanel();
        jLabel_BaudRate = new javax.swing.JLabel();
        jComboBox_BaudRateList = new javax.swing.JComboBox();
        jPanel_StopBits = new javax.swing.JPanel();
        jLabel_StopBits = new javax.swing.JLabel();
        jComboBox_StopBitsList = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jToggleButton_OpenPort = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel_Parity.setText("校验位:");

        jComboBox_ParityList.setModel(new javax.swing.DefaultComboBoxModel(CommUtils.getPARITY()));

        org.jdesktop.layout.GroupLayout jPanel_ParityLayout = new org.jdesktop.layout.GroupLayout(jPanel_Parity);
        jPanel_Parity.setLayout(jPanel_ParityLayout);
        jPanel_ParityLayout.setHorizontalGroup(
            jPanel_ParityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_ParityLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel_Parity)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBox_ParityList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(43, 43, 43))
        );
        jPanel_ParityLayout.setVerticalGroup(
            jPanel_ParityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_ParityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jComboBox_ParityList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel_Parity))
        );

        jLabel_Portname.setText("串口名:");

        jComboBox_portList.setModel(new javax.swing.DefaultComboBoxModel(CommUtils.ListPorts()));

        org.jdesktop.layout.GroupLayout jPanel_portLayout = new org.jdesktop.layout.GroupLayout(jPanel_port);
        jPanel_port.setLayout(jPanel_portLayout);
        jPanel_portLayout.setHorizontalGroup(
            jPanel_portLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_portLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel_Portname)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBox_portList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(43, 43, 43))
        );
        jPanel_portLayout.setVerticalGroup(
            jPanel_portLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_portLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jComboBox_portList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel_Portname))
        );

        jLabel_DataBits.setText("数据位:");

        jComboBox_DataBitsList.setModel(new javax.swing.DefaultComboBoxModel(CommUtils.getDATABITS()));

        org.jdesktop.layout.GroupLayout jPanel_DataBitsLayout = new org.jdesktop.layout.GroupLayout(jPanel_DataBits);
        jPanel_DataBits.setLayout(jPanel_DataBitsLayout);
        jPanel_DataBitsLayout.setHorizontalGroup(
            jPanel_DataBitsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_DataBitsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel_DataBits)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBox_DataBitsList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(43, 43, 43))
        );
        jPanel_DataBitsLayout.setVerticalGroup(
            jPanel_DataBitsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_DataBitsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jComboBox_DataBitsList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel_DataBits))
        );

        jLabel_BaudRate.setText("比特率:");

        jComboBox_BaudRateList.setModel(new javax.swing.DefaultComboBoxModel(CommUtils.getBAUDRATE()));

        org.jdesktop.layout.GroupLayout jPanel_BaudRateLayout = new org.jdesktop.layout.GroupLayout(jPanel_BaudRate);
        jPanel_BaudRate.setLayout(jPanel_BaudRateLayout);
        jPanel_BaudRateLayout.setHorizontalGroup(
            jPanel_BaudRateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_BaudRateLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel_BaudRate)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBox_BaudRateList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(43, 43, 43))
        );
        jPanel_BaudRateLayout.setVerticalGroup(
            jPanel_BaudRateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_BaudRateLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jComboBox_BaudRateList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel_BaudRate))
        );

        jLabel_StopBits.setText("停止位:");

        jComboBox_StopBitsList.setModel(new javax.swing.DefaultComboBoxModel(CommUtils.getSTOPBITS()));

        org.jdesktop.layout.GroupLayout jPanel_StopBitsLayout = new org.jdesktop.layout.GroupLayout(jPanel_StopBits);
        jPanel_StopBits.setLayout(jPanel_StopBitsLayout);
        jPanel_StopBitsLayout.setHorizontalGroup(
            jPanel_StopBitsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_StopBitsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel_StopBits)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBox_StopBitsList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(43, 43, 43))
        );
        jPanel_StopBitsLayout.setVerticalGroup(
            jPanel_StopBitsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_StopBitsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jComboBox_StopBitsList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel_StopBits))
        );

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel_DataBits, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, Short.MAX_VALUE)
                    .add(jPanel_BaudRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, Short.MAX_VALUE)
                    .add(jPanel_Parity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, Short.MAX_VALUE)
                    .add(jPanel_StopBits, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, Short.MAX_VALUE)
                    .add(jPanel_port, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 185, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_port, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_BaudRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_Parity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_DataBits, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_StopBits, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jToggleButton_OpenPort.setText("打开串口");
        jToggleButton_OpenPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_OpenPortActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jToggleButton_OpenPort)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(258, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jToggleButton_OpenPort)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton_OpenPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_OpenPortActionPerformed
        isportopen=jToggleButton_OpenPort.isSelected();
        if(isportopen){
            jToggleButton_OpenPort.setText("关闭串口");
            openPort();
        }else{
            jToggleButton_OpenPort.setText("打开串口");
            closePort();
        }
        switchEditableParameters();
    }//GEN-LAST:event_jToggleButton_OpenPortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CommJFrame commjf = new CommJFrame();
                commjf.jComboBox_BaudRateList.setSelectedItem("9600");
                commjf.setVisible(true);
            }
        });
    }

    /**
     * 打开选择的串口
     */
    private void openPort() {
//生成参数
        GenerateParameters();
        try {
//            CommUtils.openConnection(portId, sPort, parameters);
            portId =
                    CommPortIdentifier.getPortIdentifier(parameters.getPortName());
             sPort = (SerialPort) portId.open("CommTest", 10000);
             sPort.enableReceiveTimeout(30);
             setConnectionParameters();
//            System.out.println(portId==null);
//            System.out.println(sPort==null);
//            System.out.println(parameters==null);
            is = sPort.getInputStream();
            os = sPort.getOutputStream();
        } catch (UnsupportedCommOperationException ex) {
            Logger.getLogger(CommJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PortInUseException ex) {
            Logger.getLogger(CommJFrame.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (NoSuchPortException ex) {
            Logger.getLogger(CommJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            sPort.close();
//            throw new SerialConnectionException("Error opening i/o streams");
            ex.printStackTrace();
        } catch (SerialConnectionException ex) {
            sPort.close();
            ex.printStackTrace();
        }
    }



    private void closePort() {
        // 关闭选择的串口
        if (sPort != null) {
            try {
                if(os!=null){
                    os.close();
                }
                if(is!=null){
                    is.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }

            // Close the port.
            sPort.close();
        }
    }

    /**
     *
     * @return
     */
    public String[] listPorts() {
        String[] sa = CommUtils.ListPorts();
//        测试用，查看是否调用：↓
        for (int i = 0; i < sa.length; i++) {
            String string = sa[i];
            System.out.println(string);
        }
        return sa;
    }

    private void switchEditableParameters(){
        jComboBox_BaudRateList.setEditable(!isportopen);
        jComboBox_portList.setEditable(!isportopen);
        jComboBox_DataBitsList.setEditable(!isportopen);
        jComboBox_ParityList.setEditable(!isportopen);
        jComboBox_StopBitsList.setEditable(!isportopen);
    }

    /**
    Sets the connection parameters to the setting in the parameters object.
    If set fails return the parameters object to origional settings and
    throw exception.
     */
    public void setConnectionParameters() throws SerialConnectionException {

        // Save state of parameters before trying a set.
        int oldBaudRate = sPort.getBaudRate();
        int oldDatabits = sPort.getDataBits();
        int oldStopbits = sPort.getStopBits();
        int oldParity = sPort.getParity();

        // Set connection parameters, if set fails return parameters object
        // to original state.
        try {
            sPort.setSerialPortParams(parameters.getBaudRate(),
                    parameters.getDatabits(),
                    parameters.getStopbits(),
                    parameters.getParity());
        } catch (UnsupportedCommOperationException e) {
            parameters.setBaudRate(oldBaudRate);
            parameters.setDatabits(oldDatabits);
            parameters.setStopbits(oldStopbits);
            parameters.setParity(oldParity);
            throw new SerialConnectionException("Unsupported parameter");
        }

    }

    /**
     * 取得配置的参数
     */
    public void GenerateParameters() {
//        SerialParameters parameter = new SerialParameters();
        parameters.setBaudRate((String) jComboBox_BaudRateList.getSelectedItem());
        parameters.setPortName((String) jComboBox_portList.getSelectedItem());
        parameters.setDatabits((String) jComboBox_DataBitsList.getSelectedItem());
        parameters.setParity((String) jComboBox_ParityList.getSelectedItem());
        parameters.setStopbits((String) jComboBox_StopBitsList.getSelectedItem());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox_BaudRateList;
    private javax.swing.JComboBox jComboBox_DataBitsList;
    private javax.swing.JComboBox jComboBox_ParityList;
    private javax.swing.JComboBox jComboBox_StopBitsList;
    private javax.swing.JComboBox jComboBox_portList;
    private javax.swing.JLabel jLabel_BaudRate;
    private javax.swing.JLabel jLabel_DataBits;
    private javax.swing.JLabel jLabel_Parity;
    private javax.swing.JLabel jLabel_Portname;
    private javax.swing.JLabel jLabel_StopBits;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel_BaudRate;
    private javax.swing.JPanel jPanel_DataBits;
    private javax.swing.JPanel jPanel_Parity;
    private javax.swing.JPanel jPanel_StopBits;
    private javax.swing.JPanel jPanel_port;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jToggleButton_OpenPort;
    // End of variables declaration//GEN-END:variables
    private SerialParameters parameters;
    private CommPortIdentifier portId;
    private SerialPort sPort;
    private OutputStream os;
    private InputStream is;
    private boolean isportopen = false;
}
